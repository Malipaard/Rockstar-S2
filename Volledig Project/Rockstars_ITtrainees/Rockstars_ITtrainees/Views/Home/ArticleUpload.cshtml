@model ITtrainees.MVC.Models.Home.ArticleUploadViewModel
@{
    ViewData["Title"] = "ArticleUpload";
}

<!--Quill editor css & js-->
<link rel="stylesheet" href="~/css/site.css" />
<link href="~/css/quill.snow.css" rel="stylesheet">
<script src="~/js/quill.js"></script>
<script src="~/js/quill.min.js"></script>

<link rel="stylesheet" href="~/css/site.css" />
<link rel="stylesheet" href="~/css/NavBar.css" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />


<body>
    <div class="container text-light pt-3 ml-3">
        <div class="column align-items-center">
            @using (Html.BeginForm("ArticleUpload", "Home", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "setContent()" }))
            {
                <h2>Upload an article</h2>
                <table cellpadding="10" cellspacing="5">
                    <tr>
                        <td>Title: </td>
                        <td>@Html.TextBoxFor(m => m.Title)</td>
                    </tr>
                    <tr>
                        <td>Author: </td>
                        <td>@Html.TextBoxFor(m => m.Author)</td>
                    </tr>
                    <tr>
                        <td>Description: </td>
                        <td>@Html.TextBoxFor(m => m.Summary)</td>
                    </tr>
                    <tr>
                        <td>Tag: </td>
                        <td>
                            @Html.DropDownListFor(m => m.Tag, new List<SelectListItem>
                       { new SelectListItem{Text="C#", Value="C#"},
                        new SelectListItem{Text="JAVA", Value="JAVA"},
                        new SelectListItem{Text="Python", Value="Python"} }, "None")
                        </td>
                    </tr>
                    <tr>
                        <td>Header Image: </td>
                        <td>@Html.TextBoxFor(m => m.HeaderImage, null, new { @type = "file", @class = "input-file" })</td>
                    </tr>
                    <tr>
                        <td>Article Content: </td>
                        <td>
                            <div class="text-light" id="editor"></div>
                            @Html.TextBoxFor(m => m.Content, new { style = "display: none;", id = "content", value = "" })
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td><input type="submit" value="Submit" /></td>
                    </tr>
                </table>
            }
        </div>
    </div>
</body>

<script>
    var toolbarOptions = [
        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
        [{ 'header': 1 }, { 'header': 2 }],               // custom button values
        ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
        ['code-block'],

        [{ 'list': 'ordered' }, { 'list': 'bullet' }],
        [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
        [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent

        ['link', 'image', 'video'],          // add's image support
        [{ 'align': [] }],

        ['clean']                                         // remove formatting button
    ];
    var options = {
        modules: {
            toolbar: toolbarOptions
        },
        placeholder: 'Schrijf je artikel',
        theme: 'snow'
    };
    var quill = new Quill('#editor', options);

    function setContent() {
        var delta = quill.getContents();
        var content = document.getElementById("content");
        content.value = JSON.stringify(delta);
    }
</script>